// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lokahiadmin.proto

/*
Package lokahiadmin is a generated protocol buffer package.

lokahiadmin is the administrative/backend API for lokahi power usage.

It is generated from these files:
	lokahiadmin.proto

It has these top-level messages:
	CheckIDs
	Run
*/
package lokahiadmin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CheckIDs struct {
	Ids []string `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
}

func (m *CheckIDs) Reset()                    { *m = CheckIDs{} }
func (m *CheckIDs) String() string            { return proto.CompactTextString(m) }
func (*CheckIDs) ProtoMessage()               {}
func (*CheckIDs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CheckIDs) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type Run struct {
	Id       string                 `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Cids     *CheckIDs              `protobuf:"bytes,2,opt,name=cids" json:"cids,omitempty"`
	Finished bool                   `protobuf:"varint,3,opt,name=finished" json:"finished,omitempty"`
	Results  map[string]*Run_Health `protobuf:"bytes,4,rep,name=results" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Run) Reset()                    { *m = Run{} }
func (m *Run) String() string            { return proto.CompactTextString(m) }
func (*Run) ProtoMessage()               {}
func (*Run) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Run) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Run) GetCids() *CheckIDs {
	if m != nil {
		return m.Cids
	}
	return nil
}

func (m *Run) GetFinished() bool {
	if m != nil {
		return m.Finished
	}
	return false
}

func (m *Run) GetResults() map[string]*Run_Health {
	if m != nil {
		return m.Results
	}
	return nil
}

type Run_Health struct {
	Url                     string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	ResponseTimeNanoseconds int64  `protobuf:"varint,2,opt,name=response_time_nanoseconds,json=responseTimeNanoseconds" json:"response_time_nanoseconds,omitempty"`
	StatusCode              int32  `protobuf:"varint,3,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	Body                    string `protobuf:"bytes,4,opt,name=body" json:"body,omitempty"`
	Error                   string `protobuf:"bytes,5,opt,name=error" json:"error,omitempty"`
	Healthy                 bool   `protobuf:"varint,6,opt,name=healthy" json:"healthy,omitempty"`
}

func (m *Run_Health) Reset()                    { *m = Run_Health{} }
func (m *Run_Health) String() string            { return proto.CompactTextString(m) }
func (*Run_Health) ProtoMessage()               {}
func (*Run_Health) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Run_Health) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Run_Health) GetResponseTimeNanoseconds() int64 {
	if m != nil {
		return m.ResponseTimeNanoseconds
	}
	return 0
}

func (m *Run_Health) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *Run_Health) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Run_Health) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Run_Health) GetHealthy() bool {
	if m != nil {
		return m.Healthy
	}
	return false
}

func init() {
	proto.RegisterType((*CheckIDs)(nil), "github.xe.lokahi.admin.CheckIDs")
	proto.RegisterType((*Run)(nil), "github.xe.lokahi.admin.Run")
	proto.RegisterType((*Run_Health)(nil), "github.xe.lokahi.admin.Run.Health")
}

func init() { proto.RegisterFile("lokahiadmin.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 374 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x3b, 0x8f, 0xd3, 0x40,
	0x10, 0x96, 0x9f, 0xe7, 0x1b, 0x03, 0x82, 0x15, 0x82, 0xc5, 0x20, 0x61, 0xa5, 0x72, 0xe5, 0x22,
	0x50, 0x9c, 0xae, 0xbc, 0x80, 0x00, 0x09, 0x51, 0x2c, 0x54, 0x14, 0x44, 0x8e, 0x77, 0xc0, 0x2b,
	0x3b, 0xbb, 0xd1, 0x3e, 0x10, 0xfe, 0x6d, 0xfc, 0x02, 0xfe, 0x15, 0xf2, 0x3a, 0x86, 0x14, 0x90,
	0xeb, 0xe6, 0xf1, 0xcd, 0xe3, 0xfb, 0x66, 0xe0, 0xc1, 0xa0, 0xfa, 0xa6, 0x13, 0x0d, 0xdf, 0x0b,
	0x59, 0x1f, 0xb4, 0xb2, 0x8a, 0x3c, 0xfa, 0x26, 0x6c, 0xe7, 0x76, 0xf5, 0x0f, 0xac, 0xe7, 0x64,
	0xed, 0xb3, 0xab, 0x67, 0x90, 0x6d, 0x3a, 0x6c, 0xfb, 0x77, 0xaf, 0x0c, 0xb9, 0x0f, 0x91, 0xe0,
	0x86, 0x06, 0x65, 0x54, 0x5d, 0xb2, 0xc9, 0x5c, 0xfd, 0x8a, 0x20, 0x62, 0x4e, 0x92, 0x7b, 0x10,
	0x0a, 0x4e, 0x83, 0x32, 0xa8, 0x2e, 0x59, 0x28, 0x38, 0x79, 0x09, 0x71, 0x3b, 0x41, 0xc3, 0x32,
	0xa8, 0xf2, 0x75, 0x59, 0xff, 0xbb, 0x79, 0xbd, 0x74, 0x66, 0x1e, 0x4d, 0x0a, 0xc8, 0xbe, 0x0a,
	0x29, 0x4c, 0x87, 0x9c, 0x46, 0x65, 0x50, 0x65, 0xec, 0x8f, 0x4f, 0x6e, 0xe0, 0x42, 0xa3, 0x71,
	0x83, 0x35, 0x34, 0x2e, 0xa3, 0x2a, 0x5f, 0x57, 0xff, 0x6b, 0xca, 0x9c, 0xac, 0xd9, 0x0c, 0x7d,
	0x2d, 0xad, 0x1e, 0xd9, 0x52, 0x58, 0xfc, 0x0c, 0x20, 0x7d, 0x8b, 0xcd, 0x60, 0xbb, 0x89, 0x8a,
	0xd3, 0xc3, 0x71, 0xe3, 0xc9, 0x24, 0xd7, 0xf0, 0x44, 0xa3, 0x39, 0x28, 0x69, 0x70, 0x6b, 0xc5,
	0x1e, 0xb7, 0xb2, 0x91, 0xca, 0x60, 0xab, 0xe4, 0x91, 0x47, 0xc4, 0x1e, 0x2f, 0x80, 0x4f, 0x62,
	0x8f, 0x1f, 0xfe, 0xa6, 0xc9, 0x73, 0xc8, 0x8d, 0x6d, 0xac, 0x33, 0xdb, 0x56, 0x71, 0xf4, 0xbb,
	0x27, 0x0c, 0xe6, 0xd0, 0x46, 0x71, 0x24, 0x04, 0xe2, 0x9d, 0xe2, 0x23, 0x8d, 0xfd, 0x3c, 0x6f,
	0x93, 0x87, 0x90, 0xa0, 0xd6, 0x4a, 0xd3, 0xc4, 0x07, 0x67, 0x87, 0x50, 0xb8, 0xe8, 0xfc, 0x8a,
	0x23, 0x4d, 0xbd, 0x04, 0x8b, 0x5b, 0x7c, 0x81, 0x3b, 0xa7, 0xb4, 0x26, 0x0a, 0x3d, 0x8e, 0x0b,
	0x85, 0x1e, 0x47, 0x72, 0x05, 0xc9, 0xf7, 0x66, 0x70, 0x78, 0x94, 0x7d, 0x75, 0x4e, 0xa1, 0x59,
	0x07, 0x36, 0x17, 0x5c, 0x87, 0x57, 0xc1, 0xfa, 0x23, 0x64, 0xcc, 0xc9, 0xf7, 0xaa, 0x6d, 0x06,
	0xf2, 0x06, 0x52, 0x7f, 0x1b, 0x43, 0x6e, 0xbd, 0x5d, 0xf1, 0xf4, 0xcc, 0x98, 0x9b, 0xbb, 0x9f,
	0xf3, 0x93, 0x5f, 0xdb, 0xa5, 0xfe, 0xd9, 0x5e, 0xfc, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xfa, 0xc5,
	0x53, 0x8c, 0x81, 0x02, 0x00, 0x00,
}
